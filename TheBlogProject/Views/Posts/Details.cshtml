@using TheBlogProject.Enums;
@using TheBlogProject.Services.Interfaces
@using Microsoft.AspNetCore.Identity
@inject IImageService imageService
@inject UserManager<BlogUser> userManager
@model TheBlogProject.Models.Post

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>Post</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Title)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Title)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Abstract)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Abstract)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Content)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Content)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.CreatedDate)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.CreatedDate)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.UpdatedDate)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.UpdatedDate)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.ProductionStatus)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.ProductionStatus)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Slug)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Slug)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.ImageData)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.ImageData)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.ImageType)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.ImageType)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Blog)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Blog.Description)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Author)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Author.Id)
        </dd>
    </dl>
</div>
<div>
    <a asp-action="Edit" asp-route-id="@Model?.Id">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>

<hr />

<div>
    @if (User.Identity.IsAuthenticated)
    {
        <form asp-action="Create" asp-controller="Comments" method="post">
            @Html.Hidden("PostId", Model.Id)

            <div class="form-group">
                <label class="h2 custom-control-label font-weight-bold">Add Comment</label>
                <textarea name="body" class="form-control" rows="5"></textarea>
            </div>

            <button type="submit" class="btn btn-dark btn-block btn-sm">Submit</button>
        </form>
    }
    else
    {
        <a class="btn btn-block btn-sm btn-dark" asp-area="Identity" asp-page="/Account/Login">Login to add comments</a>
    }
</div>

<hr />

<button id="commentSection" class="btn btn-sm btn-dark btn-block">@Model.Comments.Count COMMENT(S)</button>

@{
    var counter = 0;
}
@foreach(var comment in Model.Comments)
{
    <div class="media media-border p-0 mb-2 bg-light">
        <img class="mr-3 mt-3 rounded-circle" style="width:60px;" src="@imageService.DecodeImage(comment.BlogUser.ImageData, comment.BlogUser.ImageType)" />
        <div class="media-body">
            <h4>@comment.BlogUser.DisplayName</h4>
            <small>
                <i>
                    @if(comment.Moderator is not null)
                    {
                        <span class="small">
                            <span class="font-weight-bolder">
                                Moderated <span class="text-danger font-italic">(@comment.ModerationType.ToString().ToLower())</span>
                            </span>
                            : @comment.Moderated?.ToString("MMM dd, yyyy")
                        </span>
                    }
                    else
                    {
                        <span class="small">
                            Posted on @comment.Created.ToString("MMM dd, yyyy")
                        </span>                    
                    }
                </i>
            </small>
            <p>@comment.Body</p>

            @if(comment.Moderated is null && comment.Deleted is null && comment.BlogUserId == userManager.GetUserId(User))
            {
                <hr />
                <button class="btn-sm btn-dark float-right font-weigh-bold" data-toggle="modal" data-target="@($"#editModal{counter}")">EDIT</button>
            }

            @if ((User.IsInRole($"{BlogRole.Administrator.ToString()}") || User.IsInRole($"{BlogRole.Moderator.ToString()}")) && comment.Deleted is null)
            {
                <hr />
                <div class="row">
                    <div class="col-2">
                        <button class="btn-sm btn-dark font-weight-bold btn-block" data-toggle="modal" data-target="@($"#moderateModal{counter}")">Moderate</button>
                    </div>
                    <div>
                        <form asp-action="Delete" asp-controller="Comments">
                            @Html.Hidden("Id", comment.Id)
                            @Html.Hidden("Slug", comment.Post.Slug)
                            <button class="btn-sm btn-dark font-weight-bold btn-block">Delete</button>
                        </form>
                    </div>
                </div>
            }
        </div>
    </div>
    @*Modals*@   
    <div class="modal" id="@($"editModal{counter}")">
        <div class="modal-dialog">
            <div class="modal-content">
                <h4 class="modal-title">Editing Comment</h4>


                <div class="modal-body">
                    <form asp-action="Edit" asp-controller="Comments">
                        @Html.Hidden("Id", comment.Id)
                        <div class="form-group">
                            <textarea name="Body" class="form-control" required> @comment.Body</textarea>
                        </div>
                        <button class="btn-sm btn-dark border-success font-weight-bold" type="submit">SUBMIT</button>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn-sm btn-dark font-weight-bold" data-dismiss="modal">ClOSE</button>
                </div>
            </div>
        </div>
    </div>
    @*Modals*@
    <div class="modal" id="@($"moderateModal{counter}")">
        <div class="modal-dialog">
            <div class="modal-content">
                <h4 class="modal-title">Moderate Comment</h4>
                <div class="modal-body">
                    <form asp-action="Moderate" asp-controller="Comments">
                        @Html.Hidden("Id", comment.Id)
                        @Html.Hidden("Body", comment.Body)
                        <div class="form-group">
                            <label class="form-label">Original Comment</label>
                            <textarea disabled class="form-control" style="resize:none">@comment.Body</textarea>
                        </div>
                        <div class="form-group">
                            <label class="form-label">Moderated Comment</label>
                            <textarea required name="ModeratedBody" class="form-control" style="resize:none">@comment.ModeratedBody</textarea>
                        </div>
                        <div class="form-group">
                            <label class="form-label">Reason for Moderation</label>
                            <select class="form-control" asp-for="@comment.ModerationType" name="ModerationType" asp-items="Html.GetEnumSelectList<ModerationType>()"></select>
                        </div>
                        <button class="btn-sm btn-dark border-success font-weight-bold" type="submit">SUBMIT</button>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn-sm btn-dark font-weight-bold" data-dismiss="modal">ClOSE</button>
                </div>
            </div>
        </div>
    </div> 
    counter++;
}

                        